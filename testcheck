#!/bin/sh

STARTDIR=`pwd`

tooldir=`dirname $0`
if [ "$tooldir" != "." ] ; then
  cd $tooldir
fi
SCRIPTDIRECTORY=`pwd`
if [ -f ../../Shared/shared.sh ] ; then
  USED_SHARED="True"
  . ../../Shared/shared.sh
else
  USED_SHARED="False"
fi

clean() {
  INFILE=$1
  OUTFILE=$2
  TESTLOOP=$3
  TESTLOOP_DIR=$4
  CURRFILE=${OUTFILE}.curr
  TEMPFILE=${OUTFILE}.temp
  DIFFFILE=${OUTFILE}

  rm -f $CURRFILE
  rm -f $TEMPFILE
  rm -f $DIFFFILE

  cp ${INFILE} ${CURRFILE}

  mv  $CURRFILE $TEMPFILE
  sed -e 's@^---$@@g' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed -e 's@^[-]*>$@@g' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed -e 's@^[0-9]*[adc][0-9]*$@@g' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed -e 's@^[0-9]*,[0-9]*[adc][0-9]*,[0-9]*$@@g' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed -e 's@^[0-9]*[adc][0-9]*,[0-9]*$@@g' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed -e 's@^[0-9]*,[0-9]*[adc][0-9]*$@@g' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Computational Dynamics, Ltd./d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/^Failure Output to/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/RUNNING CASENAME/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/ENTER A CASENAME/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Builder id:/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Warning: message passing function/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Message passing library/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/STAR-CD VERSION/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/ORIGINAL FILE /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/^[<>][^0-9]*$/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/\.f/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/A file or directory in the path name does not exist/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Local external moving mesh code initialized/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Could not bind to local port/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Address already in use/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/In the directory:/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/RESUMING FROM FILE CREATED ON VERSION/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/ALL DATA RESTORED FROM VERSION/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Pre-Processing/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Algorithm/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Post-Processing/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Total/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/parsing parm.inc.app as an appending/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/tables in the problem file/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/No such file or directory/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Not a directory/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/pro-STAR Copyright /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Portions of program include material copyrighted/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/COMMUNICATIONS:/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/EXTERNAL MOVING MESH CODE/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/STAR Copyright /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/[<>][ ]*fluinj active/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/[<>].* FLAGGED$/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/STAR VERSION /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/> FLUSH--FAILED:: Bad address/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Binary file (standard input) matches/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/[<>][ ]*STAR[ ]*=/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/[<>][ ]*$/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/[<>][ ]*\*\*\* /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/[<>] STAR [0-9]*\.[0-9]*\.[0-9]* /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/^$/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/machine accuracy/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/STARUSR/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/STARCDMAN/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/RAMFILES/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/PLUG AND/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/WARNING, 1 CPU RUN/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/CLIENT SERVER PROTOCOL/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Socket based/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Mesh motion through/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/meshkernel/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Using MK/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Local external/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/DEBUG flag active/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/Unmatched/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/ATTACH/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/READ SET /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/SET OPERATION/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/DATABASE IDENTIFIER /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/DATABASE RESTORED/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/TOTAL NUMBER OF /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/CELLS   /d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/ORIGINAL GEOMETRY FILE COPIED TO/d' $TEMPFILE > $CURRFILE  

  mv  $CURRFILE $TEMPFILE
  sed '/^Dir :/{N;s/Dir :\(.*\)\nCase:[ ]*\(.*\)/Dir :\1\/\2/}' $TEMPFILE > $CURRFILE  

  DIFF_RES="True"
  while [ "${DIFF_RES}" ]
  do
    mv $CURRFILE $TEMPFILE
    sed -e '/^Dir :/{N;s/Dir : .*\nDir :/Dir :/}' $TEMPFILE > $CURRFILE  
    DIFF_RES=`diff $CURRFILE $TEMPFILE` 
  done

  mv $CURRFILE $TEMPFILE
  sed -e '$s/^Dir : .*//' $TEMPFILE > $CURRFILE  

  grep '^Dir :' $CURRFILE | sed "s@^.*${TESTLOOP_DIR}/@@g" > ${DIFFFILE}

  rm $TEMPFILE
  rm $CURRFILE
}


cd $STARTDIR

if [ $# -ge 1 ] ; then
  tdir=$1
  if [ ! -d $tdir -a ! -f $tdir ] ; then
    echo "ERROR: $tdir does not exist"
    exit 4
  fi 
else
  tdir=`pwd` 
fi

if [ $# -eq 2 ] ; then
  diff_file=$2
else
  diff_file=${STARTDIR}/diff.txt
fi
echo "Output will go to: ${diff_file}"
echo

if [ -f "${tdir}" ] ;then
  TESTLOOP_DIR=`dirname ${tdir}`
  TESTLOOP_DIR=`dirname ${TESTLOOP_DIR}`
  TESTLOOP_DIR=`dirname ${TESTLOOP_DIR}`
  TEST_CASE_NAME=`basename ${TESTLOOP_DIR}`
  clean ${tdir} ${diff_file} ${TEST_CASE_NAME} ${TESTLOOP_DIR}
  num_cases=`wc ${diff_file} | awk '{print $1}'`
  echo "${tdir}: ${num_cases} cases"
else
  TMPDIR=$STARTDIR/tc.tmp.$$
  mkdir -p ${TMPDIR}
  echo ${tdir} > ${diff_file}
  echo >> ${diff_file}
  echo "Running test checker in $tdir"
  PORTS=`(cd ${tdir}; ls -1d *dso)`
  PORTS=`echo $PORTS`  
  FOUND_PORTS=`echo $PORTS | grep 'dso'`
  if [ "${FOUND_PORTS}" ] ; then
    echo "Using PORTS=$PORTS"
    echo
  else
    echo "ERROR: did not find any ports in `pwd`"
    exit 4
  fi
    
  cd ${TMPDIR}

  for p in $PORTS
  do
    SUITES=
    SUITES=`(cd ${tdir}/${p}; find * -type d -prune)`
    SUITES=`echo $SUITES`  
    if [ "${SUITES}" ] ; then
      for s in $SUITES
      do
	FOUND_TESTLOOPS=`(cd ${tdir}/${p}/${s}; find . -type f -name 'TestLoop_[rp]_*' 2> /dev/null | head -1)`  
	if [ "${FOUND_TESTLOOPS}" ] ; then
	  e=`dirname ${FOUND_TESTLOOPS}` 
	  e=`echo $e | cut -d'/' -f2-`
	  TESTLOOP_DIR=`dirname $e`
	  TESTLOOP_DIR=`dirname ${TESTLOOP_DIR}`
	  TestLoop_r_FILES=`(cd ${tdir}/${p}/${s}/${e}; ls -1d TestLoop_[rp]_* | grep -v '.diff$'| grep -v '.curr$' | grep -v '.temp$' )`
	  TestLoop_r_FILES=`echo ${TestLoop_r_FILES}`
	  echo "${p}/$s/$e:" >> ${diff_file} 
	  for f in ${TestLoop_r_FILES}
	  do
	    in_file="${tdir}/${p}/${s}/${e}/${f}" 
	    out_file_stub="${p}_${s}_${f}" 
	    out_file="${out_file_stub}.diff" 
	    clean ${in_file} ${out_file} ${TESTLOOP_DIR} 
	    num_cases=`wc ${out_file} | awk '{print $1}'`
	    echo "${p}/${s}/${e}/${f}: ${num_cases} cases"
	    cat ${out_file} >> ${diff_file}
	  done
	  echo >> ${diff_file}
	else
	  echo "WARNING: did not find any TestLoop_[rp]_ files in ${p}/$s"
	fi 
      done
      echo
    else
      echo "WARNING: did not find any dirs ${p}"
    fi
  done

  cd $STARTDIR

  rm -rf ${TMPDIR}
fi

if [ "${USED_SHARED}" = "True" ] ; then 
  end_script
fi
